/*libros.js (Manejo de Libros con el Backend)
Este archivo maneja las solicitudes HTTP relacionadas con los libros.*/ 

const mongoose = require('mongoose');

const LibroSchema = new mongoose.Schema({
    isbn: { type: String, required: true, unique: true },
    titulo: { type: String, required: true },
    autor: { type: mongoose.Schema.Types.ObjectId, ref: 'Autor', required: true },
    fechaEdicion: { type: Date, required: true },
    numPaginas: { type: Number, required: true },
    cantidadEjemplares: { type: Number, required: true },
    cantidadDisponibles: { type: Number, required: true },
    sinopsis: { type: String, required: true },
    tipoPresentacion: { type: String, required: true }, // Ej: tapa dura, digital, etc.
    tipoLiteratura: { type: String, required: true } // Ej: ficciÃ³n, ciencia ficciÃ³n, etc.
});

module.exports = mongoose.model('Libro', LibroSchema);


/*AsÃ­, cuando obtienes un libro, puedes hacer un populate para ver la informaciÃ³n del autor en vez de solo su id. */

/*Define la estructura de los libros en la base de datos.*/
/*
ðŸ“‚ biblioteca
â”‚â”€â”€ ðŸ“‚ backend
â”‚   â”‚â”€â”€ server.js
â”‚   â”‚â”€â”€ database.js
â”‚   â”‚â”€â”€ .env
â”‚   â”‚â”€â”€ ðŸ“‚ models
â”‚   â”‚   â”‚â”€â”€ Libro.js
â”‚   â”‚   â”‚â”€â”€ Autor.js
â”‚   â”‚â”€â”€ ðŸ“‚ routes
â”‚   â”‚   â”‚â”€â”€ libros.js
â”‚   â”‚   â”‚â”€â”€ autores.js
â”‚   â”‚â”€â”€ package.json
â”‚
â”‚â”€â”€ ðŸ“‚ frontend
â”‚   â”‚â”€â”€ index.html
â”‚   â”‚â”€â”€ crear_libro.html
â”‚   â”‚â”€â”€ crear_autor.html
â”‚   â”‚â”€â”€ libros.js
â”‚   â”‚â”€â”€ autores.js
â”‚   â”‚â”€â”€ style.css
â”‚   â”‚â”€â”€ ðŸ“‚ assets (para imÃ¡genes, iconos, etc.)
*/ 

/*models/ (Modelos de Datos con Mongoose)
es
Una carpeta donde se definen los esquemas de la base de datos con Mongoose.
sirve

Define la estructura de los documentos en MongoDB.
Facilita la manipulaciÃ³n de datos.*/

/*Se usa required: true en los campos esenciales para evitar datos incompletos.
âœ” Los textos tienen trim: true para eliminar espacios innecesarios.
âœ” timestamps: true agrega automÃ¡ticamente createdAt y updatedAt.
âœ” RelaciÃ³n entre Libro y Autor con ref: 'Autor' para permitir la bÃºsqueda de libros por autor. */