/*Autor.js (Manejo de Autores con el Backend)
Este archivo maneja las solicitudes HTTP relacionadas con los autores.*/ 

const mongoose = require('mongoose');

const AutorSchema = new mongoose.Schema({
    nombre: String,
    nacionalidad: String,
    fechaNacimiento: Date,
    fechaPublicacion: Date,
    fechaPublicacion: String,
    premios: String,
    biografia: String
});

module.exports = mongoose.model('Autor', AutorSchema);

/*Define la estructura de los autores en la base de datos.*/

/*
ðŸ“‚ biblioteca
â”‚â”€â”€ ðŸ“‚ backend
â”‚   â”‚â”€â”€ server.js
â”‚   â”‚â”€â”€ database.js
â”‚   â”‚â”€â”€ .env
â”‚   â”‚â”€â”€ ðŸ“‚ models
â”‚   â”‚   â”‚â”€â”€ Libro.js
â”‚   â”‚   â”‚â”€â”€ Autor.js
â”‚   â”‚â”€â”€ ðŸ“‚ routes
â”‚   â”‚   â”‚â”€â”€ libros.js
â”‚   â”‚   â”‚â”€â”€ autores.js
â”‚   â”‚â”€â”€ package.json
â”‚
â”‚â”€â”€ ðŸ“‚ frontend
â”‚   â”‚â”€â”€ index.html
â”‚   â”‚â”€â”€ crear_libro.html
â”‚   â”‚â”€â”€ crear_autor.html
â”‚   â”‚â”€â”€ libros.js
â”‚   â”‚â”€â”€ autores.js
â”‚   â”‚â”€â”€ style.css
â”‚   â”‚â”€â”€ ðŸ“‚ assets (para imÃ¡genes, iconos, etc.)
*/ 

/*
Resumen Final Backend
Archivo/Carpeta	            FunciÃ³n
package.json	            Define las dependencias del proyecto
package-lock.json	        Bloquea versiones exactas de dependencias
.env	                    Almacena variables de entorno (ej. URL de BD)
server.js	                Inicia el servidor con Express
database.js               	Conecta con MongoDB usando Mongoose
routes/	                    Define las rutas de la API (endpoints)
models/                  	Modela la estructura de datos con Mongoose
node_modules/	            Contiene las dependencias de Node.js*/